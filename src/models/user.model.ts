export interface UserActions {
  setUser: (user: UserLogged) => void;
  emptyUser: () => void;
}

export interface UserState {
  user: UserLogged | null;
}

export type UserStore = UserState & UserActions;

// Modelo del usuario.
export interface User {
  id: string;
  name: string;
  email?: string;
  description?: string;
  profileImgUrl?: string;
  dateOfBirth?: string;
  gender: string;
}

// Modelo de un usuario autenticado.
export interface UserLogged {
  token: string;
  user: User;
  onboarded: boolean;
  role: 'User' | 'Moderator';
}
export interface Session {
  id: 0;
  channelId: 0;
  name: string;
  messages: {
    sessionId: 0;
    userName: string;
    date: Date;
    text: string;
    isModerated: true;
    isProfessional: true;
    isAutogenerated: true;
  }[];
  moderatorName: string;
  created_Date: Date;
  init_Date: Date;
  close_Date: Date;
  duration: {
    ticks: 0;
    days: 0;
    hours: 0;
    milliseconds: 0;
    microseconds: 0;
    nanoseconds: 0;
    minutes: 0;
    seconds: 0;
    totalDays: 0;
    totalHours: 0;
    totalMilliseconds: 0;
    totalMicroseconds: 0;
    totalNanoseconds: 0;
    totalMinutes: 0;
    totalSeconds: 0;
  };
  state: 0;
  type: 0;
}
